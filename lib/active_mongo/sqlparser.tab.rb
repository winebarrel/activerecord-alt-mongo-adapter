#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sqlparser.y".
#

require 'racc/parser'



require 'strscan'

module ActiveMongo


class SQLParser < Racc::Parser

module_eval <<'..end sqlparser.y modeval..id3e4205f06e', 'sqlparser.y', 211

KEYWORDS = %w(
  AND
  AS
  ASC
  BETWEEN
  BY
  COUNT
  DELETE
  DESC
  EXISTS
  FROM
  IN
  INSERT
  INTO
  LIMIT
  MOD
  NOT
  OFFSET
  ORDER
  REGEXP
  SELECT
  SET
  UPDATE
  VALUES
  WHERE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

def scan
  piece = nil

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:<>|!=|>=|<=|>|<|=)/)
      yield tok, tok
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield tok.upcase.to_sym, tok
    elsif (tok = @ss.scan /NULL\b/i)
      yield :NULL, nil
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield :STRING, tok.slice(1...-1).gsub(/''/, "'")
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)(?:\.\d+)/)
      yield :NUMBER, tok.to_f
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)/)
      yield :NUMBER, tok.to_i
    elsif (tok = @ss.scan /[,\(\)\*]/)
      yield tok, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*ID\b/i)
      yield :ID, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*(?:[a-z_]\w+|[a-z])/i)
      yield :IDENTIFIER, tok
    else
      raise Racc::ParseError, ('parse error on value "%s"' % @ss.rest.inspect)
    end
  end

  yield false, '$'
end
private :scan

def parse
  yyparse self, :scan
end

..end sqlparser.y modeval..id3e4205f06e

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 43, :_reduce_none,
 1, 43, :_reduce_none,
 1, 43, :_reduce_none,
 1, 43, :_reduce_none,
 10, 44, :_reduce_5,
 8, 45, :_reduce_6,
 8, 45, :_reduce_7,
 4, 56, :_reduce_8,
 6, 56, :_reduce_9,
 1, 57, :_reduce_none,
 1, 57, :_reduce_none,
 1, 51, :_reduce_12,
 1, 51, :_reduce_none,
 0, 52, :_reduce_14,
 2, 52, :_reduce_15,
 2, 52, :_reduce_16,
 1, 58, :_reduce_none,
 3, 58, :_reduce_18,
 3, 60, :_reduce_19,
 5, 60, :_reduce_20,
 1, 59, :_reduce_21,
 3, 59, :_reduce_22,
 1, 62, :_reduce_none,
 3, 62, :_reduce_24,
 3, 63, :_reduce_25,
 4, 63, :_reduce_26,
 5, 63, :_reduce_27,
 1, 63, :_reduce_none,
 1, 63, :_reduce_none,
 5, 65, :_reduce_30,
 6, 66, :_reduce_31,
 0, 53, :_reduce_32,
 4, 53, :_reduce_33,
 0, 67, :_reduce_34,
 1, 67, :_reduce_none,
 0, 54, :_reduce_36,
 2, 54, :_reduce_37,
 0, 55, :_reduce_38,
 2, 55, :_reduce_39,
 5, 46, :_reduce_40,
 1, 69, :_reduce_none,
 3, 69, :_reduce_42,
 3, 70, :_reduce_43,
 4, 47, :_reduce_44,
 1, 48, :_reduce_none,
 1, 49, :_reduce_46,
 3, 49, :_reduce_47,
 1, 61, :_reduce_none,
 1, 61, :_reduce_none,
 1, 61, :_reduce_none,
 1, 50, :_reduce_51,
 3, 50, :_reduce_52,
 1, 64, :_reduce_53,
 1, 64, :_reduce_54,
 1, 64, :_reduce_55,
 1, 64, :_reduce_56,
 1, 64, :_reduce_57,
 1, 64, :_reduce_58,
 1, 64, :_reduce_59,
 1, 64, :_reduce_60,
 1, 64, :_reduce_61,
 1, 64, :_reduce_62,
 1, 64, :_reduce_63,
 1, 68, :_reduce_64,
 1, 68, :_reduce_65 ]

racc_reduce_n = 66

racc_shift_n = 132

racc_action_table = [
    95,   120,   123,   129,    38,    97,    65,    66,   126,   127,
    70,    73,    28,    76,    77,    26,    84,    58,    60,    70,
    73,    11,   119,   119,   119,    62,    63,    78,    80,    67,
    68,    69,    71,    72,    74,    75,    78,    80,    67,    68,
    69,    71,    72,    74,    75,     4,    25,    81,    81,    49,
     8,    81,    33,    64,    24,   131,    46,    84,    46,    11,
    52,    52,    52,    19,    52,    14,    41,     3,    86,    11,
     7,    11,    11,    11,    25,    11,   119,    60,    89,    60,
    90,    60,    11,    60,    62,    63,    62,    63,    62,    63,
    62,    63,    60,    33,    60,    92,    60,    93,    60,    62,
    63,    62,    63,    62,    63,    62,    63,    60,    33,    60,
    11,    21,    27,    98,    62,    63,    62,    63,    20,    11,
   101,   102,   102,    11,   106,    43,   109,   110,    11,    11,
    11,   114,   116,   116,    11,    13,    11,    33,    12,    32,
   128,    11,    11,    86 ]

racc_action_check = [
    79,   108,   111,   118,    27,    82,    46,    46,   113,   113,
    48,    48,    20,    48,    48,    18,    82,    39,    79,    85,
    85,    27,   108,   111,   118,    79,    79,    48,    48,    48,
    48,    48,    48,    48,    48,    48,    85,    85,    85,    85,
    85,    85,    85,    85,    85,     0,    17,    49,    84,    33,
     0,    81,    29,    44,    15,   121,    49,    50,    33,    52,
    49,    84,    33,     8,    81,     8,    29,     0,    56,    13,
     0,    49,    84,    33,    44,    81,   121,    95,    58,   106,
    64,   100,     8,   110,    95,    95,   106,   106,   100,   100,
   110,   110,   109,    37,    92,    66,    65,    76,   119,   109,
   109,    92,    92,    65,    65,   119,   119,    77,    35,    43,
    12,    10,    19,    83,    77,    77,    43,    43,     9,    32,
    86,    87,    88,    89,    90,    30,    93,    94,    41,    26,
   101,   102,   103,   104,    25,     7,    24,    23,     4,    22,
   116,     3,    21,    57 ]

racc_action_pointer = [
    43,   nil,   nil,   113,   135,   nil,   nil,   127,    54,   118,
    86,   nil,    82,    41,   nil,    46,   nil,    20,     7,   108,
    12,   114,   135,   125,   108,   106,   101,    -7,   nil,    40,
   111,   nil,    91,    45,   nil,    96,   nil,    81,   nil,    12,
   nil,   100,   nil,    87,    48,   nil,    -8,   nil,    -4,    43,
    41,   nil,    31,   nil,   nil,   nil,    49,   124,    68,   nil,
   nil,   nil,   nil,   nil,    74,    74,    91,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    82,    85,   nil,    -4,
   nil,    47,     0,   108,    44,     5,   100,   100,   101,    95,
   120,   nil,    72,   122,   111,    55,   nil,   nil,   nil,   nil,
    59,   102,   109,   109,   110,   nil,    57,   nil,    -4,    70,
    61,    -3,   nil,   -32,   nil,   nil,   118,   nil,    -2,    76,
   nil,    50,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_action_default = [
   -66,    -1,    -2,   -66,   -66,    -3,    -4,   -66,   -66,   -66,
   -66,   -45,   -66,   -66,   -12,   -66,   -46,   -13,   -66,   -66,
   -66,   -66,   -66,   -14,   -66,   -66,   -66,   -66,   132,   -14,
   -66,   -41,   -66,   -66,   -44,   -14,   -47,   -14,   -10,   -66,
   -11,   -66,   -40,   -66,   -66,   -29,   -66,   -15,   -66,   -66,
   -16,   -17,   -66,   -21,   -23,   -28,   -32,   -32,    -8,   -42,
   -49,   -43,   -48,   -50,   -66,   -66,   -66,   -56,   -57,   -58,
   -63,   -59,   -60,   -53,   -61,   -62,   -66,   -66,   -54,   -66,
   -55,   -66,   -66,   -66,   -66,   -66,   -66,   -36,   -36,   -66,
   -66,   -19,   -66,   -66,   -66,   -66,   -25,   -24,   -18,   -22,
   -66,   -66,   -66,   -38,   -38,    -9,   -66,   -51,   -66,   -66,
   -66,   -66,   -26,   -34,   -37,    -7,   -66,    -6,   -66,   -66,
   -20,   -66,   -30,   -27,   -33,   -35,   -64,   -65,   -39,    -5,
   -52,   -31 ]

racc_goto_table = [
    10,    18,    17,    61,    79,    16,     6,    31,    15,    22,
    23,   103,   104,    39,   108,    47,    51,   111,    30,    87,
    88,    35,    36,    37,    40,    91,    44,    59,   118,    16,
    34,   121,    83,   115,   117,    50,    42,    94,    30,    96,
     5,   100,    56,     2,    57,    99,     1,   124,   125,    85,
    29,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   112,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   122,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   130,
   nil,   nil,   nil,   nil,   nil,   nil,   105,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   113 ]

racc_goto_check = [
     6,     9,     7,    19,    22,     6,     5,    28,    14,     6,
     6,    12,    12,    15,     8,    16,    18,     8,     6,    11,
    11,     6,     6,     6,     6,    19,     7,    28,     8,     6,
    10,     8,    18,    13,    13,    17,    10,    19,     6,    19,
     4,    22,    10,     3,    10,    20,     2,    25,    26,     6,
    27,     1,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    19,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    51,    46,    43,    40,     6,    -3,    -6,   -78,    -7,
     7,   -37,   -76,   -70,     0,   -14,   -18,     2,   -17,   -40,
   -39,   nil,   -44,   nil,   nil,   -66,   -65,    29,   -14 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    48,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    82,   nil,   107,
    53,    54,   nil,    55,    45,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :INSERT => 2,
 :INTO => 3,
 "(" => 4,
 ")" => 5,
 :VALUES => 6,
 :SELECT => 7,
 :FROM => 8,
 :COUNT => 9,
 :AS => 10,
 "*" => 11,
 :WHERE => 12,
 :ID => 13,
 "=" => 14,
 :IN => 15,
 :AND => 16,
 :NOT => 17,
 :BETWEEN => 18,
 :ORDER => 19,
 :BY => 20,
 :LIMIT => 21,
 :NUMBER => 22,
 :OFFSET => 23,
 :UPDATE => 24,
 :SET => 25,
 "," => 26,
 :DELETE => 27,
 :IDENTIFIER => 28,
 :STRING => 29,
 :NULL => 30,
 :REGEXP => 31,
 :MOD => 32,
 :EXISTS => 33,
 "<>" => 34,
 "!=" => 35,
 ">=" => 36,
 "<=" => 37,
 ">" => 38,
 "<" => 39,
 :ASC => 40,
 :DESC => 41 }

racc_use_result_var = false

racc_nt_base = 42

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'INSERT',
'INTO',
'"("',
'")"',
'VALUES',
'SELECT',
'FROM',
'COUNT',
'AS',
'"*"',
'WHERE',
'ID',
'"="',
'IN',
'AND',
'NOT',
'BETWEEN',
'ORDER',
'BY',
'LIMIT',
'NUMBER',
'OFFSET',
'UPDATE',
'SET',
'","',
'DELETE',
'IDENTIFIER',
'STRING',
'NULL',
'REGEXP',
'MOD',
'EXISTS',
'"<>"',
'"!="',
'">="',
'"<="',
'">"',
'"<"',
'ASC',
'DESC',
'$start',
'sql',
'create_statement',
'read_statemant',
'update_statemant',
'delete_statemant',
'id',
'id_list',
'value_list',
'select_list',
'where_clause',
'order_by_clause',
'limit_clause',
'offset_clause',
'count_clause',
'count_arg',
'id_search_condition',
'search_condition',
'id_predicate',
'value',
'boolean_primary',
'predicate',
'op',
'between_predicate',
'not_in_predicate',
'ordering_spec',
'order_spec',
'set_clause_list',
'set_clause']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

module_eval <<'.,.,', 'sqlparser.y', 12
  def _reduce_5( val, _values)
                            {:command => :insert, :table => val[2], :column_list => val[4], :value_list => val[8]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 17
  def _reduce_6( val, _values)
                            {:command => :select, :table => val[3], :select_list => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 21
  def _reduce_7( val, _values)
                            {:command => :select, :table => val[3], :count => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 26
  def _reduce_8( val, _values)
                            "count_all"
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 30
  def _reduce_9( val, _values)
                            val[5]
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

module_eval <<'.,.,', 'sqlparser.y', 38
  def _reduce_12( val, _values)
                            []
  end
.,.,

 # reduce 13 omitted

module_eval <<'.,.,', 'sqlparser.y', 44
  def _reduce_14( val, _values)
                            []
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 48
  def _reduce_15( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 52
  def _reduce_16( val, _values)
                            val[1]
  end
.,.,

 # reduce 17 omitted

module_eval <<'.,.,', 'sqlparser.y', 58
  def _reduce_18( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 63
  def _reduce_19( val, _values)
                            val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 67
  def _reduce_20( val, _values)
                            val[3]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 72
  def _reduce_21( val, _values)
                            [val[0]].flatten
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 76
  def _reduce_22( val, _values)
                            (val[0] << val[2]).flatten
  end
.,.,

 # reduce 23 omitted

module_eval <<'.,.,', 'sqlparser.y', 82
  def _reduce_24( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 87
  def _reduce_25( val, _values)
                            {:name => val[0], :op => val[1], :expr => val[2]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 91
  def _reduce_26( val, _values)
                            {:name => val[1], :op => val[2], :expr => val[3], :not => true}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 95
  def _reduce_27( val, _values)
                            {:name => val[0], :op => val[1], :expr => val[3]}
  end
.,.,

 # reduce 28 omitted

 # reduce 29 omitted

module_eval <<'.,.,', 'sqlparser.y', 102
  def _reduce_30( val, _values)
                            {:name => val[0], :op => '$between', :expr => [val[2], val[4]]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 107
  def _reduce_31( val, _values)
                            {:name => val[0], :op => '$nin', :expr => val[4]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 112
  def _reduce_32( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 116
  def _reduce_33( val, _values)
                            {:name => val[2], :type => val[3]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 121
  def _reduce_34( val, _values)
                            :asc
  end
.,.,

 # reduce 35 omitted

module_eval <<'.,.,', 'sqlparser.y', 127
  def _reduce_36( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 131
  def _reduce_37( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 136
  def _reduce_38( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 140
  def _reduce_39( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 145
  def _reduce_40( val, _values)
                            {:command => :update, :table => val[1], :set_clause_list => val[3], :condition => val[4]}
  end
.,.,

 # reduce 41 omitted

module_eval <<'.,.,', 'sqlparser.y', 151
  def _reduce_42( val, _values)
                            val[0].merge val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 156
  def _reduce_43( val, _values)
                          {val[0] => val[2]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 161
  def _reduce_44( val, _values)
                            {:command => :delete, :table => val[2], :condition => val[3]}
  end
.,.,

 # reduce 45 omitted

module_eval <<'.,.,', 'sqlparser.y', 168
  def _reduce_46( val, _values)
                            [val[0]]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 172
  def _reduce_47( val, _values)
                            val[0] << val[2]
  end
.,.,

 # reduce 48 omitted

 # reduce 49 omitted

 # reduce 50 omitted

module_eval <<'.,.,', 'sqlparser.y', 181
  def _reduce_51( val, _values)
                            [val[0]]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 185
  def _reduce_52( val, _values)
                            val[0] << val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 186
  def _reduce_53( val, _values)
 '$in'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 187
  def _reduce_54( val, _values)
 '$regexp'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 188
  def _reduce_55( val, _values)
 '$mod'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 189
  def _reduce_56( val, _values)
 '$exists'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 190
  def _reduce_57( val, _values)
 '$ne'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 191
  def _reduce_58( val, _values)
 '$ne'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 192
  def _reduce_59( val, _values)
 '$gte'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 193
  def _reduce_60( val, _values)
 '$lte'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 194
  def _reduce_61( val, _values)
 '$gt'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 195
  def _reduce_62( val, _values)
 '$lt'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 196
  def _reduce_63( val, _values)
 '$eq'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 198
  def _reduce_64( val, _values)
 :asc
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 199
  def _reduce_65( val, _values)
 :desc
  end
.,.,

 def _reduce_none( val, _values)
  val[0]
 end

end   # class SQLParser


end # module ActiveMongo
