#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "sqlparser.y".
#

require 'racc/parser'



require 'strscan'

module ActiveMongo


class SQLParser < Racc::Parser

module_eval <<'..end sqlparser.y modeval..idb07802d36a', 'sqlparser.y', 201

KEYWORDS = %w(
  AND
  AS
  ASC
  BY
  COUNT
  DELETE
  DESC
  EXISTS
  FROM
  IN
  INSERT
  INTO
  LIMIT
  MOD
  NOT
  OFFSET
  ORDER
  REGEXP
  SELECT
  SET
  UPDATE
  VALUES
  WHERE
)

KEYWORD_REGEXP = Regexp.compile("(?:#{KEYWORDS.join '|'})\\b", Regexp::IGNORECASE)

def initialize(obj)
  src = obj.is_a?(IO) ? obj.read : obj.to_s
  @ss = StringScanner.new(src)
end

def scan
  piece = nil

  until @ss.eos?
    if (tok = @ss.scan /\s+/)
      # nothing to do
    elsif (tok = @ss.scan /(?:<>|!=|>=|<=|>|<|=)/)
      yield tok, tok
    elsif (tok = @ss.scan KEYWORD_REGEXP)
      yield tok.upcase.to_sym, tok
    elsif (tok = @ss.scan /NULL\b/i)
      yield :NULL, nil
    elsif (tok = @ss.scan /'(?:[^']|'')*'/) #'
      yield :STRING, tok.slice(1...-1).gsub(/''/, "'")
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)(?:\.\d+)/)
      yield :NUMBER, tok.to_f
    elsif (tok = @ss.scan /-?(?:0|[1-9]\d*)/)
      yield :NUMBER, tok.to_i
    elsif (tok = @ss.scan /[,\(\)\*]/)
      yield tok, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*ID\b/i)
      yield :ID, tok
    elsif (tok = @ss.scan /(?:[a-z_]\w+\.|[a-z]\.)*(?:[a-z_]\w+|[a-z])/i)
      yield :IDENTIFIER, tok
    else
      raise Racc::ParseError, ('parse error on value "%s"' % @ss.rest.inspect)
    end
  end

  yield false, '$'
end
private :scan

def parse
  yyparse self, :scan
end

..end sqlparser.y modeval..idb07802d36a

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 1, 42, :_reduce_none,
 1, 42, :_reduce_none,
 1, 42, :_reduce_none,
 1, 42, :_reduce_none,
 10, 43, :_reduce_5,
 8, 44, :_reduce_6,
 8, 44, :_reduce_7,
 4, 55, :_reduce_8,
 6, 55, :_reduce_9,
 1, 56, :_reduce_none,
 1, 56, :_reduce_none,
 1, 50, :_reduce_12,
 1, 50, :_reduce_none,
 0, 51, :_reduce_14,
 2, 51, :_reduce_15,
 2, 51, :_reduce_16,
 1, 57, :_reduce_none,
 3, 57, :_reduce_18,
 3, 59, :_reduce_19,
 5, 59, :_reduce_20,
 1, 58, :_reduce_21,
 3, 58, :_reduce_22,
 1, 61, :_reduce_none,
 3, 61, :_reduce_24,
 3, 62, :_reduce_25,
 5, 62, :_reduce_26,
 1, 62, :_reduce_none,
 6, 64, :_reduce_28,
 0, 52, :_reduce_29,
 4, 52, :_reduce_30,
 0, 65, :_reduce_31,
 1, 65, :_reduce_none,
 0, 53, :_reduce_33,
 2, 53, :_reduce_34,
 0, 54, :_reduce_35,
 2, 54, :_reduce_36,
 5, 45, :_reduce_37,
 1, 67, :_reduce_none,
 3, 67, :_reduce_39,
 3, 68, :_reduce_40,
 4, 46, :_reduce_41,
 1, 47, :_reduce_none,
 1, 48, :_reduce_43,
 3, 48, :_reduce_44,
 1, 60, :_reduce_none,
 1, 60, :_reduce_none,
 1, 60, :_reduce_none,
 1, 49, :_reduce_48,
 3, 49, :_reduce_49,
 1, 63, :_reduce_50,
 1, 63, :_reduce_51,
 1, 63, :_reduce_52,
 1, 63, :_reduce_53,
 1, 63, :_reduce_54,
 1, 63, :_reduce_55,
 1, 63, :_reduce_56,
 1, 63, :_reduce_57,
 1, 63, :_reduce_58,
 1, 63, :_reduce_59,
 1, 63, :_reduce_60,
 1, 66, :_reduce_61,
 1, 66, :_reduce_62 ]

racc_reduce_n = 63

racc_shift_n = 123

racc_action_table = [
    90,   112,     4,    38,    88,    33,    33,     7,    63,    64,
    56,    68,    71,    49,    73,    80,    80,    61,    41,    11,
   114,   111,    45,     2,    59,    60,     6,    74,    76,    77,
    65,    66,    67,    69,    70,    72,    11,    80,    11,    11,
   111,   120,    62,   122,    93,    61,    45,    19,    11,    14,
    61,    26,    59,    60,    25,    78,    11,    59,    60,    61,
    11,   111,    25,   111,    61,    11,    59,    60,    61,    24,
    61,    59,    60,    61,    78,    59,    60,    59,    60,    11,
    59,    60,   116,   117,    82,    82,    85,    86,    43,    33,
    89,    11,    21,    27,    20,    94,    95,    96,    96,    11,
    11,    11,   103,    11,    11,   106,   107,   107,    33,    13,
    32,    12,    11,   119,    11,    28,   100 ]

racc_action_check = [
    75,   102,     0,    27,    64,    29,    37,     0,    45,    45,
    39,    47,    47,    33,    47,    78,    80,    75,    29,    27,
   104,   102,    33,     0,    75,    75,     0,    47,    47,    47,
    47,    47,    47,    47,    47,    47,    33,    49,    78,    80,
   104,   110,    44,   113,    79,    88,    49,     7,    41,     7,
    90,    18,    88,    88,    17,    79,    32,    90,    90,   100,
    49,   110,    44,   113,   103,     7,   100,   100,    43,    15,
    63,   103,   103,   111,    48,    43,    43,    63,    63,    13,
   111,   111,   105,   105,    54,    55,    56,    62,    31,    35,
    73,    12,    10,    19,     8,    81,    82,    83,    84,    85,
    26,    25,    89,    24,    95,    96,    97,    98,    23,     6,
    22,     4,    21,   107,     2,    20,    86 ]

racc_action_pointer = [
     0,   nil,    87,   nil,   108,   nil,   101,    38,    94,   nil,
    68,   nil,    64,    52,   nil,    61,   nil,    29,    43,    89,
   115,    85,   106,    96,    76,    74,    73,    -8,   nil,    -7,
   nil,    74,    29,     9,   nil,    77,   nil,    -6,   nil,     5,
   nil,    21,   nil,    47,    37,    -6,   nil,    -3,    58,    33,
   nil,   nil,   nil,   nil,    66,    67,    76,   nil,   nil,   nil,
   nil,   nil,    81,    49,     0,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    75,   nil,    -4,   nil,   nil,    11,    39,
    12,    90,    77,    77,    78,    72,   112,   nil,    24,    98,
    29,   nil,   nil,   nil,   nil,    77,    84,    84,    85,   nil,
    38,   nil,    -4,    43,    15,    43,   nil,    92,   nil,   nil,
    36,    52,   nil,    38,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil ]

racc_action_default = [
   -63,    -2,   -63,    -3,   -63,    -4,   -63,   -63,   -63,    -1,
   -63,   -42,   -63,   -63,   -12,   -63,   -43,   -13,   -63,   -63,
   -63,   -63,   -63,   -14,   -63,   -63,   -63,   -63,   123,   -14,
   -38,   -63,   -63,   -63,   -41,   -14,   -44,   -14,   -10,   -63,
   -11,   -63,   -37,   -63,   -63,   -63,   -15,   -63,   -16,   -63,
   -17,   -21,   -23,   -27,   -29,   -29,    -8,   -39,   -40,   -45,
   -47,   -46,   -63,   -63,   -63,   -54,   -55,   -56,   -60,   -57,
   -58,   -50,   -59,   -63,   -51,   -63,   -52,   -53,   -63,   -63,
   -63,   -63,   -63,   -33,   -33,   -63,   -63,   -19,   -63,   -63,
   -63,   -25,   -22,   -24,   -18,   -63,   -63,   -35,   -35,    -9,
   -63,   -48,   -63,   -63,   -63,   -31,   -34,   -63,    -7,    -6,
   -63,   -63,   -20,   -63,   -26,   -32,   -61,   -62,   -30,   -36,
    -5,   -49,   -28 ]

racc_goto_table = [
    10,    58,    17,    34,    50,    16,    30,    97,    98,    42,
    22,    23,    83,    84,    18,    54,   102,    55,   104,    31,
    81,    87,    35,    36,    37,    40,    57,    44,   110,     5,
    16,   113,     3,    91,   108,   109,    15,    39,    46,    31,
    48,     1,     9,    92,    75,   118,   115,    29,     8,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   121,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    99,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   105 ]

racc_goto_check = [
     6,    19,     7,    10,    18,     6,    27,    12,    12,    10,
     6,     6,    11,    11,     9,    10,     8,    10,     8,     6,
    18,    19,     6,     6,     6,     6,    27,     7,     8,     5,
     6,     8,     4,    19,    13,    13,    14,    15,    16,     6,
    17,     3,     2,    20,    22,    24,    25,    26,     1,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    19,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     6 ]

racc_goto_pointer = [
   nil,    48,    42,    41,    32,    29,    -2,    -5,   -72,     7,
   -20,   -42,   -76,   -63,    29,    10,     5,     7,   -29,   -42,
   -35,   nil,    -3,   nil,   -60,   -59,    26,   -15 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,    47,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    79,   nil,   101,
    51,    52,   nil,    53,   nil,   nil,   nil,   nil ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :INSERT => 2,
 :INTO => 3,
 "(" => 4,
 ")" => 5,
 :VALUES => 6,
 :SELECT => 7,
 :FROM => 8,
 :COUNT => 9,
 :AS => 10,
 "*" => 11,
 :WHERE => 12,
 :ID => 13,
 "=" => 14,
 :IN => 15,
 :AND => 16,
 :NOT => 17,
 :ORDER => 18,
 :BY => 19,
 :LIMIT => 20,
 :NUMBER => 21,
 :OFFSET => 22,
 :UPDATE => 23,
 :SET => 24,
 "," => 25,
 :DELETE => 26,
 :IDENTIFIER => 27,
 :STRING => 28,
 :NULL => 29,
 :REGEXP => 30,
 :MOD => 31,
 :EXISTS => 32,
 "<>" => 33,
 "!=" => 34,
 ">=" => 35,
 "<=" => 36,
 ">" => 37,
 "<" => 38,
 :ASC => 39,
 :DESC => 40 }

racc_use_result_var = false

racc_nt_base = 41

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'INSERT',
'INTO',
'"("',
'")"',
'VALUES',
'SELECT',
'FROM',
'COUNT',
'AS',
'"*"',
'WHERE',
'ID',
'"="',
'IN',
'AND',
'NOT',
'ORDER',
'BY',
'LIMIT',
'NUMBER',
'OFFSET',
'UPDATE',
'SET',
'","',
'DELETE',
'IDENTIFIER',
'STRING',
'NULL',
'REGEXP',
'MOD',
'EXISTS',
'"<>"',
'"!="',
'">="',
'"<="',
'">"',
'"<"',
'ASC',
'DESC',
'$start',
'sql',
'create_statement',
'read_statemant',
'update_statemant',
'delete_statemant',
'id',
'id_list',
'value_list',
'select_list',
'where_clause',
'order_by_clause',
'limit_clause',
'offset_clause',
'count_clause',
'count_arg',
'id_search_condition',
'search_condition',
'id_predicate',
'value',
'boolean_primary',
'predicate',
'op',
'not_in_predicate',
'ordering_spec',
'order_spec',
'set_clause_list',
'set_clause']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

module_eval <<'.,.,', 'sqlparser.y', 12
  def _reduce_5( val, _values)
                            {:command => :insert, :table => val[2], :column_list => val[4], :value_list => val[8]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 17
  def _reduce_6( val, _values)
                            {:command => :select, :table => val[3], :select_list => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 21
  def _reduce_7( val, _values)
                            {:command => :select, :table => val[3], :count => val[1], :condition => val[4], :order => val[5], :limit => val[6], :offset => val[7]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 26
  def _reduce_8( val, _values)
                            "count_all"
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 30
  def _reduce_9( val, _values)
                            val[5]
  end
.,.,

 # reduce 10 omitted

 # reduce 11 omitted

module_eval <<'.,.,', 'sqlparser.y', 38
  def _reduce_12( val, _values)
                            []
  end
.,.,

 # reduce 13 omitted

module_eval <<'.,.,', 'sqlparser.y', 44
  def _reduce_14( val, _values)
                            []
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 48
  def _reduce_15( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 52
  def _reduce_16( val, _values)
                            val[1]
  end
.,.,

 # reduce 17 omitted

module_eval <<'.,.,', 'sqlparser.y', 58
  def _reduce_18( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 63
  def _reduce_19( val, _values)
                            val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 67
  def _reduce_20( val, _values)
                            val[3]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 72
  def _reduce_21( val, _values)
                            [val[0]].flatten
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 76
  def _reduce_22( val, _values)
                            (val[0] << val[2]).flatten
  end
.,.,

 # reduce 23 omitted

module_eval <<'.,.,', 'sqlparser.y', 82
  def _reduce_24( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 87
  def _reduce_25( val, _values)
                            {:name => val[0], :op => val[1], :expr => val[2]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 91
  def _reduce_26( val, _values)
                            {:name => val[0], :op => val[1], :expr => val[3]}
  end
.,.,

 # reduce 27 omitted

module_eval <<'.,.,', 'sqlparser.y', 97
  def _reduce_28( val, _values)
                            {:name => val[0], :op => '$nin', :expr => val[4]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 102
  def _reduce_29( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 106
  def _reduce_30( val, _values)
                            {:name => val[2], :type => val[3]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 111
  def _reduce_31( val, _values)
                            :asc
  end
.,.,

 # reduce 32 omitted

module_eval <<'.,.,', 'sqlparser.y', 117
  def _reduce_33( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 121
  def _reduce_34( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 126
  def _reduce_35( val, _values)
                            nil
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 130
  def _reduce_36( val, _values)
                            val[1]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 135
  def _reduce_37( val, _values)
                            {:command => :update, :table => val[1], :set_clause_list => val[3], :condition => val[4]}
  end
.,.,

 # reduce 38 omitted

module_eval <<'.,.,', 'sqlparser.y', 141
  def _reduce_39( val, _values)
                            val[0].merge val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 146
  def _reduce_40( val, _values)
                          {val[0] => val[2]}
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 151
  def _reduce_41( val, _values)
                            {:command => :delete, :table => val[2], :condition => val[3]}
  end
.,.,

 # reduce 42 omitted

module_eval <<'.,.,', 'sqlparser.y', 158
  def _reduce_43( val, _values)
                            [val[0]]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 162
  def _reduce_44( val, _values)
                            val[0] << val[2]
  end
.,.,

 # reduce 45 omitted

 # reduce 46 omitted

 # reduce 47 omitted

module_eval <<'.,.,', 'sqlparser.y', 171
  def _reduce_48( val, _values)
                            [val[0]]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 175
  def _reduce_49( val, _values)
                            val[0] << val[2]
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 176
  def _reduce_50( val, _values)
 '$in'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 177
  def _reduce_51( val, _values)
 '$regexp'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 178
  def _reduce_52( val, _values)
 '$mod'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 179
  def _reduce_53( val, _values)
 '$exists'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 180
  def _reduce_54( val, _values)
 '$ne'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 181
  def _reduce_55( val, _values)
 '$ne'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 182
  def _reduce_56( val, _values)
 '$gte'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 183
  def _reduce_57( val, _values)
 '$lte'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 184
  def _reduce_58( val, _values)
 '$gt'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 185
  def _reduce_59( val, _values)
 '$lt'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 186
  def _reduce_60( val, _values)
 '$eq'
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 188
  def _reduce_61( val, _values)
 :asc
  end
.,.,

module_eval <<'.,.,', 'sqlparser.y', 189
  def _reduce_62( val, _values)
 :desc
  end
.,.,

 def _reduce_none( val, _values)
  val[0]
 end

end   # class SQLParser


end # module ActiveMongo
